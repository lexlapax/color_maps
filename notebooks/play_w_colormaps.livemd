# develop color maps

```elixir
my_app_root = Path.join(__DIR__, "..")

Mix.install([
  {:color_maps, path: my_app_root, env: :dev},
  {:kino, "~> 0.8.0"},
  {:nx, "~> 0.4.1"},
  {:exla, "~> 0.4.1"},
  {:image, "~> 0.15.0"},
  {:jason, "~> 1.4"}
])
```

## Section

```elixir
import IEx.Helpers
Nx.Defn.global_default_options(compiler: EXLA)
```

```elixir
ColorMaps.Wesanderson.palette_names()
```

```elixir
pal = ColorMaps.Wesanderson.palette(:aquatic1)
pal
```

```elixir
ColorMaps.Cyclic.palette_names()
```

```elixir
ColorMaps.Cartocolors.palette_names()
```

```elixir
ColorMaps.Colorbrewer.palette_names()
```

```elixir
Palette.show_discrete_image(ColorMaps.Colorbrewer.palette(:blues9))
```

```elixir
Palette.float_colors(ColorMaps.Colorbrewer.palette(:blues9))
```

```elixir
Palette.show_discrete_image(ColorMaps.Cartocolors.palette(:vivid))
```

```elixir
Palette.show_discrete_image(ColorMaps.Cyclic.palette(:twilight))
```

```elixir
Palette.show_discrete_image(ColorMaps.Cyclic.palette(:twilight_shifted))
```

```elixir
tn = Nx.tensor(Palette.colors(pal))
Nx.transpose(tn)
tn
```

```elixir
Palette.show_discrete_image(pal)
```

```elixir
Palette.show_discrete_image(ColorMaps.Wesanderson.palette(:moonrise6))
```

```elixir
Palette.show_discrete_image(ColorMaps.Wesanderson.palette(:isleofdogs2))
```

```elixir
ColorMaps.Matplotlib.palette_names()
```

```elixir
pal1 = ColorMaps.Matplotlib.palette(:viridis)
length(Palette.colors(pal1))
Palette.show_discrete_image(pal1)
```

```elixir
Palette.show_discrete_image(ColorMaps.Matplotlib.palette(:inferno))
```

```elixir
Palette.show_discrete_image(ColorMaps.Matplotlib.palette(:magma))
```

```elixir
Palette.show_discrete_image(ColorMaps.Matplotlib.palette(:plasma))
```

```elixir
Palette.show_discrete_image(ColorMaps.Tableau.palette(:green_orange_12))
```

```elixir
ColorMaps.Cmocean.palette_names()
```

```elixir
Palette.show_discrete_image(ColorMaps.Cmocean.palette(:turbid))
```

```elixir
# stb_img = StbImage.read_file!(Path.join(__DIR__, "wesanderson_aquatic1.png"))
vix_img = Image.open!(Path.join(__DIR__, "wesanderson_aquatic1.png"), access: :random)
Palette.vix_kino_show(vix_img)
```

```elixir
{_, ex_tn} = Image.to_nx(vix_img)
```

```elixir
Nx.slice(ex_tn, [0, 0, 0], [1, 64, 4])
```

```elixir
Kino.Markdown
```
